name: Ansible Configuration

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform (setup or deploy)'
        required: true
        default: 'setup'
      service:
        description: 'Service to deploy (only needed for deploy action)'
        required: false
        default: ''
      version:
        description: 'Version to deploy (only needed for deploy action)'
        required: false
        default: 'v1.0.0'

jobs:
  ansible:
    name: 'Ansible Configuration'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up SSH keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # Set up SSH agent
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
          
          # Create SSH config to use our private key
          cat > ~/.ssh/config << EOF
          Host *
            StrictHostKeyChecking no
            UserKnownHostsFile=/dev/null
            IdentityFile ~/.ssh/id_rsa
          EOF
          
          chmod 600 ~/.ssh/config
          
          # Add bastion host to known hosts
          ssh-keyscan -t rsa 165.227.163.186 >> ~/.ssh/known_hosts
      
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      
      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible==6.0.0 docker paramiko
      
      - name: Run Setup Playbook
        if: github.event.inputs.action == 'setup'
        working-directory: infrastructure/ansible
        run: ansible-playbook -i inventory/hosts.yml setup.yml
        env:
          ANSIBLE_HOST_KEY_CHECKING: False
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      
      - name: Run Deployment Playbook
        if: github.event.inputs.action == 'deploy'
        working-directory: infrastructure/ansible
        run: |
          ansible-playbook -i inventory/hosts.yml deploy.yml -e "service=${{ github.event.inputs.service }} version=${{ github.event.inputs.version }}"
        env:
          ANSIBLE_HOST_KEY_CHECKING: False
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}