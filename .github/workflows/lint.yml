name: "Code Linting"

on:
  push:
    branches:
      - main
    paths:
      - 'infrastructure/terraform/**'
      - 'infrastructure/ansible/**'
  pull_request:
    branches:
      - main
    paths:
      - 'infrastructure/terraform/**'
      - 'infrastructure/ansible/**'
  workflow_dispatch:

jobs:
  terraform-lint:
    name: "Terraform Lint"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      statuses: write
    defaults:
      run:
        shell: bash
        working-directory: ./infrastructure/terraform
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Report Pending Status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.payload.pull_request.head.sha,
              state: 'pending',
              context: 'terraform-lint',
              description: 'Running Terraform linting...',
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            });
      
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: latest
      
      - name: Init TFLint
        run: tflint --init
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0
      
      - name: Terraform Init (for validate)
        run: terraform init -backend=false
      
      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true
      
      - name: Terraform Lint
        id: tflint
        run: tflint --format=compact --recursive
        continue-on-error: true
      
      - name: Terraform Validate
        id: validate
        run: terraform validate
        continue-on-error: true
      
      - name: Determine Status
        id: status
        run: |
          if [ "${{ steps.fmt.outcome }}" == "success" ] && [ "${{ steps.tflint.outcome }}" == "success" ] && [ "${{ steps.validate.outcome }}" == "success" ]; then
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "success=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Post PR Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const formatStatus = '${{ steps.fmt.outcome }}' === 'success' ? '✅ Pass' : '❌ Fail';
            const lintStatus = '${{ steps.tflint.outcome }}' === 'success' ? '✅ Pass' : '❌ Fail';
            const validateStatus = '${{ steps.validate.outcome }}' === 'success' ? '✅ Pass' : '❌ Fail';
            
            const output = `## Terraform Lint Results
            
            | Check | Status |
            | ----- | ------ |
            | Format | ${formatStatus} |
            | TFLint | ${lintStatus} |
            | Validate | ${validateStatus} |
            
            [View details](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
      
      - name: Report Status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const state = ${{ steps.status.outputs.success }} ? 'success' : 'failure';
            const description = ${{ steps.status.outputs.success }} ? 'Terraform lint checks passed' : 'Terraform lint checks failed';
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.payload.pull_request.head.sha,
              state: state,
              context: 'terraform-lint',
              description: description,
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            });

  ansible-lint:
    name: "Ansible Lint"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      statuses: write
    defaults:
      run:
        shell: bash
        working-directory: ./infrastructure/ansible
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Report Pending Status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.payload.pull_request.head.sha,
              state: 'pending',
              context: 'ansible-lint',
              description: 'Running Ansible linting...',
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            });
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install Ansible and linting tools
        run: |
          python -m pip install --upgrade pip
          pip install ansible==6.0.0 ansible-lint yamllint
      
      - name: YAML Lint Check
        id: yamllint
        run: yamllint -f parsable .
        continue-on-error: true
      
      - name: Ansible Syntax Check
        id: syntax
        run: |
          ansible-playbook --syntax-check setup.yml || true
          ansible-playbook --syntax-check deploy.yml || true
        continue-on-error: true
      
      - name: Ansible Lint
        id: ansible_lint
        run: ansible-lint -p
        continue-on-error: true
      
      - name: Determine Status
        id: status
        run: |
          if [ "${{ steps.yamllint.outcome }}" == "success" ] && [ "${{ steps.syntax.outcome }}" == "success" ] && [ "${{ steps.ansible_lint.outcome }}" == "success" ]; then
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "success=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Post PR Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const yamlStatus = '${{ steps.yamllint.outcome }}' === 'success' ? '✅ Pass' : '❌ Fail';
            const syntaxStatus = '${{ steps.syntax.outcome }}' === 'success' ? '✅ Pass' : '❌ Fail';
            const lintStatus = '${{ steps.ansible_lint.outcome }}' === 'success' ? '✅ Pass' : '❌ Fail';
            
            const output = `## Ansible Lint Results
            
            | Check | Status |
            | ----- | ------ |
            | YAML Lint | ${yamlStatus} |
            | Syntax Check | ${syntaxStatus} |
            | Ansible Lint | ${lintStatus} |
            
            [View details](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
      
      - name: Report Status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const state = ${{ steps.status.outputs.success }} ? 'success' : 'failure';
            const description = ${{ steps.status.outputs.success }} ? 'Ansible lint checks passed' : 'Ansible lint checks failed';
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.payload.pull_request.head.sha,
              state: state,
              context: 'ansible-lint',
              description: description,
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            });
